import React, { createContext, useContext, useState, ReactNode } from 'react'

export type Language = 'hi' | 'en'

interface LanguageContextType {
  language: Language
  setLanguage: (lang: Language) => void
  t: (key: string) => string
}

const translations = {
  hi: {
    // Navigation
    home: '‡§π‡•ã‡§Æ',
    marketplace: '‡§¨‡§æ‡§ú‡§º‡§æ‡§∞',
    government: '‡§∏‡§∞‡§ï‡§æ‡§∞',
    tokens: '‡§ü‡•ã‡§ï‡§®',
    profile: '‡§™‡•ç‡§∞‡•ã‡§´‡§æ‡§á‡§≤',
    dashboard: '‡§°‡•à‡§∂‡§¨‡•ã‡§∞‡•ç‡§°',
    'fasal-market': '‡§´‡§∏‡§≤ ‡§Æ‡§æ‡§∞‡•ç‡§ï‡•á‡§ü',
    'change-language': '‡§≠‡§æ‡§∑‡§æ ‡§¨‡§¶‡§≤‡•á‡§Ç',
    hindi: '‡§π‡§ø‡§®‡•ç‡§¶‡•Ä',
    english: '‡§Ö‡§Ç‡§ó‡•ç‡§∞‡•á‡§ú‡•Ä',

    // Login Page
    'kisan-suvidha': '‡§ï‡§ø‡§∏‡§æ‡§® ‡§∏‡•Å‡§µ‡§ø‡§ß‡§æ',
    'farmers-digital-helper': 'Farmer\'s Digital Helper',
    'mobile-number': '‡§Æ‡•ã‡§¨‡§æ‡§á‡§≤ ‡§®‡§Ç‡§¨‡§∞',
    'enter-10-digit-mobile': '10 ‡§Ö‡§Ç‡§ï‡•ã‡§Ç ‡§ï‡§æ ‡§Æ‡•ã‡§¨‡§æ‡§á‡§≤ ‡§®‡§Ç‡§¨‡§∞ ‡§°‡§æ‡§≤‡•á‡§Ç',
    'send-otp': 'OTP ‡§≠‡•á‡§ú‡•á‡§Ç',
    'sending-otp': 'OTP ‡§≠‡•á‡§ú‡§æ ‡§ú‡§æ ‡§∞‡§π‡§æ ‡§π‡•à...',
    'enter-otp-sent-to': 'OTP ‡§°‡§æ‡§≤‡•á‡§Ç ‡§ú‡•ã ‡§≠‡•á‡§ú‡§æ ‡§ó‡§Ø‡§æ ‡§π‡•à +91',
    'verify-login': '‡§∏‡§§‡•ç‡§Ø‡§æ‡§™‡§® ‡§ï‡§∞‡•á‡§Ç ‡§î‡§∞ ‡§≤‡•â‡§ó‡§ø‡§® ‡§ï‡§∞‡•á‡§Ç',
    'verifying': '‡§∏‡§§‡•ç‡§Ø‡§æ‡§™‡§® ‡§π‡•ã ‡§∞‡§π‡§æ ‡§π‡•à...',
    'change-number': '‚Üê ‡§®‡§Ç‡§¨‡§∞ ‡§¨‡§¶‡§≤‡•á‡§Ç',
    'demo-otp': 'üîë ‡§°‡•á‡§Æ‡•ã OTP: 1234',

    // Dashboard
    'namaste-ram-kumar': '‡§®‡§Æ‡§∏‡•ç‡§§‡•á, ‡§∞‡§æ‡§Æ ‡§ï‡•Å‡§Æ‡§æ‡§∞ ‡§ú‡•Ä! üôè',
    'welcome-farming-dashboard': '‡§Ü‡§™‡§ï‡•á ‡§ñ‡•á‡§§‡•Ä ‡§°‡•à‡§∂‡§¨‡•ã‡§∞‡•ç‡§° ‡§Æ‡•á‡§Ç ‡§Ü‡§™‡§ï‡§æ ‡§∏‡•ç‡§µ‡§æ‡§ó‡§§ ‡§π‡•à',
    'total-earnings': '‡§ï‡•Å‡§≤ ‡§ï‡§Æ‡§æ‡§à',
    'total-sales': '‡§ï‡•Å‡§≤ ‡§¨‡§ø‡§ï‡•ç‡§∞‡•Ä',
    'pending-orders': '‡§≤‡§Ç‡§¨‡§ø‡§§ ‡§ë‡§∞‡•ç‡§°‡§∞',
    'govt-tokens': '‡§∏‡§∞‡§ï‡§æ‡§∞‡•Ä ‡§ü‡•ã‡§ï‡§®',
    'sell-to-private-buyers': '‡§®‡§ø‡§ú‡•Ä ‡§ñ‡§∞‡•Ä‡§¶‡§æ‡§∞‡•ã‡§Ç ‡§ï‡•ã ‡§¨‡•á‡§ö‡•á‡§Ç',
    'government-procurement': '‡§∏‡§∞‡§ï‡§æ‡§∞‡•Ä ‡§ñ‡§∞‡•Ä‡§¶',
    'recent-sales': '‡§π‡§æ‡§≤ ‡§ï‡•Ä ‡§¨‡§ø‡§ï‡•ç‡§∞‡•Ä',
    'view-all': '‡§∏‡§≠‡•Ä ‡§¶‡•á‡§ñ‡•á‡§Ç',
    'notifications': '‡§∏‡•Ç‡§ö‡§®‡§æ‡§è‡§Ç',

    // Recent Sales Data
    'wheat': '‡§ó‡•á‡§π‡•Ç‡§Ç',
    'soybean': '‡§∏‡•ã‡§Ø‡§æ‡§¨‡•Ä‡§®',
    'chickpea': '‡§ö‡§®‡§æ',
    'quintal': '‡§ï‡•Å‡§Ç‡§§‡§≤',
    'private-buyer': '‡§™‡•ç‡§∞‡§æ‡§á‡§µ‡•á‡§ü ‡§¨‡§æ‡§Ø‡§∞',
    'government-purchase': '‡§∏‡§∞‡§ï‡§æ‡§∞‡•Ä ‡§ñ‡§∞‡•Ä‡§¶',
    'days-ago': '‡§¶‡§ø‡§® ‡§™‡§π‡§≤‡•á',
    'week-ago': '‡§∏‡§™‡•ç‡§§‡§æ‡§π ‡§™‡§π‡§≤‡•á',

    // Notifications
    'govt-wheat-purchase': '‡§∏‡§∞‡§ï‡§æ‡§∞‡•Ä ‡§ó‡•á‡§π‡•Ç‡§Ç ‡§ñ‡§∞‡•Ä‡§¶',
    'starts-tomorrow-village': '‡§ï‡§≤ ‡§Ü‡§™‡§ï‡•á ‡§ó‡§æ‡§Ç‡§µ ‡§Æ‡•á‡§Ç ‡§∂‡•Å‡§∞‡•Ç ‡§π‡•ã‡§ó‡•Ä',
    'new-buyer-interested': '‡§®‡§Ø‡§æ ‡§ñ‡§∞‡•Ä‡§¶‡§æ‡§∞ ‡§¶‡§ø‡§≤‡§ö‡§∏‡•ç‡§™',
    'wants-to-buy-soybean': '‡§ï‡•ã‡§à ‡§Ü‡§™‡§ï‡§æ ‡§∏‡•ã‡§Ø‡§æ‡§¨‡•Ä‡§® ‡§ñ‡§∞‡•Ä‡§¶‡§®‡§æ ‡§ö‡§æ‡§π‡§§‡§æ ‡§π‡•à',
    'price-alert': '‡§≠‡§æ‡§µ ‡§Ö‡§≤‡§∞‡•ç‡§ü',
    'wheat-price-increased': '‡§ó‡•á‡§π‡•Ç‡§Ç ‡§ï‡•Ä ‡§ï‡•Ä‡§Æ‡§§ 3% ‡§¨‡§¢‡§º‡•Ä ‡§π‡•à',
    'hours-ago': '‡§ò‡§Ç‡§ü‡•á ‡§™‡§π‡§≤‡•á',

    // Common
    'active': '‡§∏‡§ï‡•ç‡§∞‡§ø‡§Ø',
    'ready': '‡§§‡•à‡§Ø‡§æ‡§∞',
    'close': '‡§¨‡§Ç‡§¶ ‡§ï‡§∞‡•á‡§Ç',
    'sold': '‡§¨‡•á‡§ö‡§æ ‡§ó‡§Ø‡§æ',
    'upcoming': '‡§Ü‡§ó‡§æ‡§Æ‡•Ä',
    'select': '‡§ö‡•Å‡§®‡•á‡§Ç',
    'add': '‡§ú‡•ã‡§°‡§º‡•á‡§Ç',

    // Marketplace
    'add-new-crop-listing': '‡§®‡§à ‡§´‡§∏‡§≤ ‡§∏‡•Ç‡§ö‡•Ä ‡§ú‡•ã‡§°‡§º‡•á‡§Ç',
    'crop-type': '‡§´‡§∏‡§≤ ‡§ï‡§æ ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞',
    'select-crop': '‡§´‡§∏‡§≤ ‡§ö‡•Å‡§®‡•á‡§Ç',
    'quantity-quintals': '‡§Æ‡§æ‡§§‡•ç‡§∞‡§æ (‡§ï‡•Å‡§Ç‡§§‡§≤ ‡§Æ‡•á‡§Ç)',
    'price-per-quintal': '‡§™‡•ç‡§∞‡§§‡§ø ‡§ï‡•Å‡§Ç‡§§‡§≤ ‡§¶‡§∞',
    'description': '‡§µ‡§ø‡§µ‡§∞‡§£',
    'add-photos': '‡§§‡§∏‡•ç‡§µ‡•Ä‡§∞‡•á‡§Ç ‡§ú‡•ã‡§°‡§º‡•á‡§Ç',
    'post-listing': '‡§∏‡•Ç‡§ö‡•Ä ‡§™‡•ã‡§∏‡•ç‡§ü ‡§ï‡§∞‡•á‡§Ç',
    'my-listings': '‡§Æ‡•á‡§∞‡•Ä ‡§∏‡•Ç‡§ö‡§ø‡§Ø‡§æ‡§Ç',
    'nearby-listings': '‡§Ü‡§∏‡§™‡§æ‡§∏ ‡§ï‡•Ä ‡§∏‡•Ç‡§ö‡§ø‡§Ø‡§æ‡§Ç',
    'inquiries': '‡§™‡•Ç‡§õ‡§§‡§æ‡§õ',
    'km-away': '‡§ï‡§ø‡§Æ‡•Ä ‡§¶‡•Ç‡§∞',
    'contact-farmer': '‡§ï‡§ø‡§∏‡§æ‡§® ‡§∏‡•á ‡§∏‡§Ç‡§™‡§∞‡•ç‡§ï ‡§ï‡§∞‡•á‡§Ç',
    'chat-with': '‡§ï‡•á ‡§∏‡§æ‡§• ‡§ö‡•à‡§ü ‡§ï‡§∞‡•á‡§Ç',

    // Government Connect
    'upcoming-procurement-drives': '‡§Ü‡§ó‡§æ‡§Æ‡•Ä ‡§ñ‡§∞‡•Ä‡§¶ ‡§Ö‡§≠‡§ø‡§Ø‡§æ‡§®',
    'past-government-purchases': '‡§™‡§ø‡§õ‡§≤‡•Ä ‡§∏‡§∞‡§ï‡§æ‡§∞‡•Ä ‡§ñ‡§∞‡•Ä‡§¶‡§æ‡§∞‡•Ä',
    'tomorrow': '‡§ï‡§≤',
    'registration-open': '‡§™‡§Ç‡§ú‡•Ä‡§ï‡§∞‡§£ ‡§ñ‡•Å‡§≤‡§æ',
    'coming-soon': '‡§ú‡§≤‡•ç‡§¶ ‡§Ü ‡§∞‡§π‡§æ',
    'view-details': '‡§µ‡§ø‡§µ‡§∞‡§£ ‡§¶‡•á‡§ñ‡•á‡§Ç',
    'register-now': '‡§Ö‡§≠‡•Ä ‡§™‡§Ç‡§ú‡•Ä‡§ï‡§∞‡§£ ‡§ï‡§∞‡•á‡§Ç',
    'get-token': '‡§ü‡•ã‡§ï‡§® ‡§≤‡•á‡§Ç',
    'token-number': '‡§ü‡•ã‡§ï‡§® ‡§®‡§Ç‡§¨‡§∞',

    // Locations
    'sariya-mandi': '‡§∏‡§∞‡§ø‡§Ø‡§æ ‡§Æ‡§Ç‡§°‡•Ä',
    'district-headquarters': '‡§ú‡§ø‡§≤‡§æ ‡§Æ‡•Å‡§ñ‡•ç‡§Ø‡§æ‡§≤‡§Ø',
    'krishi-upaj-mandi': '‡§ï‡•É‡§∑‡§ø ‡§â‡§™‡§ú ‡§Æ‡§Ç‡§°‡•Ä',

    // Crops
    'onion': '‡§™‡•ç‡§Ø‡§æ‡§ú',
    'potato': '‡§Ü‡§≤‡•Ç',
    'tomato': '‡§ü‡§Æ‡§æ‡§ü‡§∞',
    'corn': '‡§Æ‡§ï‡•ç‡§ï‡§æ',
    'rice': '‡§ö‡§æ‡§µ‡§≤',
    'mustard': '‡§∏‡§∞‡§∏‡•ã‡§Ç',

    // Token System
    'my-tokens': '‡§Æ‡•á‡§∞‡•á ‡§ü‡•ã‡§ï‡§®',
    'book-token': '‡§ü‡•ã‡§ï‡§® ‡§¨‡•Å‡§ï ‡§ï‡§∞‡•á‡§Ç',
    'book-new-token': '‡§®‡§Ø‡§æ ‡§ü‡•ã‡§ï‡§® ‡§¨‡•Å‡§ï ‡§ï‡§∞‡•á‡§Ç',
    'select-procurement-drive': '‡§ñ‡§∞‡•Ä‡§¶ ‡§Ö‡§≠‡§ø‡§Ø‡§æ‡§® ‡§ö‡•Å‡§®‡•á‡§Ç',
    'choose-drive': '‡§Ö‡§≠‡§ø‡§Ø‡§æ‡§® ‡§ö‡•Å‡§®‡•á‡§Ç',
    'select-time-slot': '‡§∏‡§Æ‡§Ø ‡§∏‡•ç‡§≤‡•â‡§ü ‡§ö‡•Å‡§®‡•á‡§Ç',
    'slot-full': '‡§≠‡§∞ ‡§ó‡§Ø‡§æ',
    'slots-available': '‡§∏‡•ç‡§≤‡•â‡§ü ‡§â‡§™‡§≤‡§¨‡•ç‡§ß',
    'sale': '‡§¨‡§ø‡§ï‡•ç‡§∞‡•Ä',
    'confirmed': '‡§™‡•Å‡§∑‡•ç‡§ü',
    'pending': '‡§™‡•ç‡§∞‡§§‡•Ä‡§ï‡•ç‡§∑‡§æ‡§∞‡§§',
    'completed': '‡§™‡•Ç‡§∞‡•ç‡§£',
    'ready-to-sell': '‡§¨‡•á‡§ö‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§§‡•à‡§Ø‡§æ‡§∞!',
    'show-qr-code': 'QR ‡§ï‡•ã‡§° ‡§¶‡§ø‡§ñ‡§æ‡§è‡§Ç',
    'cancel-token': '‡§ü‡•ã‡§ï‡§® ‡§∞‡§¶‡•ç‡§¶ ‡§ï‡§∞‡•á‡§Ç',

    // Profile
    'edit-profile': '‡§™‡•ç‡§∞‡•ã‡§´‡§æ‡§á‡§≤ ‡§∏‡§Ç‡§™‡§æ‡§¶‡§ø‡§§ ‡§ï‡§∞‡•á‡§Ç',
    'verify-documents': '‡§¶‡§∏‡•ç‡§§‡§æ‡§µ‡•á‡§ú ‡§∏‡§§‡•ç‡§Ø‡§æ‡§™‡§ø‡§§ ‡§ï‡§∞‡•á‡§Ç',
    'contact-support': '‡§∏‡§π‡§æ‡§Ø‡§§‡§æ ‡§∏‡•á ‡§∏‡§Ç‡§™‡§∞‡•ç‡§ï ‡§ï‡§∞‡•á‡§Ç',
    'logout': '‡§≤‡•â‡§ó‡§Ü‡§â‡§ü',
    'village': '‡§ó‡§æ‡§Ç‡§µ',
    'district': '‡§ú‡§ø‡§≤‡§æ',
    'farm-size': '‡§ñ‡•á‡§§ ‡§ï‡§æ ‡§Ü‡§ï‡§æ‡§∞',
    'kcc-number': 'KCC ‡§®‡§Ç‡§¨‡§∞',
    'crops-grown': '‡§â‡§ó‡§æ‡§à ‡§ó‡§à ‡§´‡§∏‡§≤‡•á‡§Ç',
    'quick-actions': '‡§§‡•ç‡§µ‡§∞‡§ø‡§§ ‡§ï‡•ç‡§∞‡§ø‡§Ø‡§æ‡§è‡§Ç'
  },
  en: {
    // Navigation
    home: 'Home',
    marketplace: 'Marketplace',
    government: 'Government',
    tokens: 'Tokens',
    profile: 'Profile',
    dashboard: 'Dashboard',
    'fasal-market': 'Fasal Market',
    'change-language': 'Change Language',
    hindi: 'Hindi',
    english: 'English',

    // Login Page
    'kisan-suvidha': 'Fasal Market',
    'farmers-digital-helper': 'Farmer\'s Digital Helper',
    'mobile-number': 'Mobile Number',
    'enter-10-digit-mobile': 'Enter 10-digit mobile number',
    'send-otp': 'Send OTP',
    'sending-otp': 'Sending OTP...',
    'enter-otp-sent-to': 'Enter OTP sent to +91',
    'verify-login': 'Verify & Login',
    'verifying': 'Verifying...',
    'change-number': '‚Üê Change Number',
    'demo-otp': 'üîë Demo OTP: 1234',

    // Dashboard
    'namaste-ram-kumar': 'Hello, Ram Kumar! üëã',
    'welcome-farming-dashboard': 'Welcome to your farming dashboard',
    'total-earnings': 'Total Earnings',
    'total-sales': 'Total Sales',
    'pending-orders': 'Pending Orders',
    'govt-tokens': 'Govt Tokens',
    'sell-to-private-buyers': 'Sell to private buyers',
    'government-procurement': 'Government procurement',
    'recent-sales': 'Recent Sales',
    'view-all': 'View All',
    'notifications': 'Notifications',

    // Recent Sales Data
    'wheat': 'Wheat',
    'soybean': 'Soybean',
    'chickpea': 'Chickpea',
    'quintal': 'quintal',
    'private-buyer': 'Private Buyer',
    'government-purchase': 'Government Purchase',
    'days-ago': 'days ago',
    'week-ago': 'week ago',

    // Notifications
    'govt-wheat-purchase': 'Government Wheat Purchase',
    'starts-tomorrow-village': 'Starting tomorrow in your village',
    'new-buyer-interested': 'New Buyer Interested',
    'wants-to-buy-soybean': 'Someone wants to buy your soybean',
    'price-alert': 'Price Alert',
    'wheat-price-increased': 'Wheat price increased by 3%',
    'hours-ago': 'hours ago',

    // Common
    'active': 'Active',
    'ready': 'Ready',
    'close': 'Close',
    'sold': 'Sold',
    'upcoming': 'Upcoming',
    'select': 'Select',
    'add': 'Add',

    // Marketplace
    'add-new-crop-listing': 'Add New Crop Listing',
    'crop-type': 'Crop Type',
    'select-crop': 'Select Crop',
    'quantity-quintals': 'Quantity (in quintals)',
    'price-per-quintal': 'Price per quintal',
    'description': 'Description',
    'add-photos': 'Add Photos',
    'post-listing': 'Post Listing',
    'my-listings': 'My Listings',
    'nearby-listings': 'Nearby Listings',
    'inquiries': 'Inquiries',
    'km-away': 'km away',
    'contact-farmer': 'Contact Farmer',
    'chat-with': 'Chat with',

    // Government Connect
    'upcoming-procurement-drives': 'Upcoming Procurement Drives',
    'past-government-purchases': 'Past Government Purchases',
    'tomorrow': 'Tomorrow',
    'registration-open': 'Registration Open',
    'coming-soon': 'Coming Soon',
    'view-details': 'View Details',
    'register-now': 'Register Now',
    'get-token': 'Get Token',
    'token-number': 'Token Number',

    // Locations
    'sariya-mandi': 'Sariya Mandi',
    'district-headquarters': 'District Headquarters',
    'krishi-upaj-mandi': 'Krishi Upaj Mandi',

    // Crops
    'onion': 'Onion',
    'potato': 'Potato',
    'tomato': 'Tomato',
    'corn': 'Corn',
    'rice': 'Rice',
    'mustard': 'Mustard',

    // Token System
    'my-tokens': 'My Tokens',
    'book-token': 'Book Token',
    'book-new-token': 'Book New Token',
    'select-procurement-drive': 'Select Procurement Drive',
    'choose-drive': 'Choose a drive',
    'select-time-slot': 'Select Time Slot',
    'slot-full': 'Full',
    'slots-available': 'slots available',
    'sale': 'Sale',
    'confirmed': 'Confirmed',
    'pending': 'Pending',
    'completed': 'Completed',
    'ready-to-sell': 'Ready to sell!',
    'show-qr-code': 'Show QR Code',
    'cancel-token': 'Cancel Token',

    // Profile
    'edit-profile': 'Edit Profile',
    'verify-documents': 'Verify Documents',
    'contact-support': 'Contact Support',
    'logout': 'Logout',
    'village': 'Village',
    'district': 'District',
    'farm-size': 'Farm Size',
    'kcc-number': 'KCC Number',
    'crops-grown': 'Crops Grown',
    'quick-actions': 'Quick Actions'
  }
}

const LanguageContext = createContext<LanguageContextType | undefined>(undefined)

export const useLanguage = () => {
  const context = useContext(LanguageContext)
  if (!context) {
    throw new Error('useLanguage must be used within a LanguageProvider')
  }
  return context
}

interface LanguageProviderProps {
  children: ReactNode
}

export const LanguageProvider: React.FC<LanguageProviderProps> = ({ children }) => {
  const [language, setLanguage] = useState<Language>('en')

  const t = (key: string): string => {
    return translations[language][key as keyof typeof translations[typeof language]] || key
  }

  return (
    <LanguageContext.Provider value={{ language, setLanguage, t }}>
      {children}
    </LanguageContext.Provider>
  )
}